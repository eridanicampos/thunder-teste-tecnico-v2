// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thunders.TechTest.Infrastructure.Data;

#nullable disable

namespace Thunders.TechTest.Infrastructure.Migrations
{
    [DbContext(typeof(PedagioDbContext))]
    [Migration("20250428031350_CreateRelatorios")]
    partial class CreateRelatorios
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Thunders.TechTest.Domain.Entities.Praca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("cidade");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasComment("When this entity was created in this DB");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("created_by_user_id")
                        .HasComment("The id of the user who did create");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at")
                        .HasComment("When this entity was deleted in this DB");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("deleted_by_user_id")
                        .HasComment("The id of the user who did the delete");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("estado");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("The field that identifies that the entity was deleted");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nome");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at")
                        .HasComment("When this entity was modified the last time");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("update_by_user_id")
                        .HasComment("The id of the user who did the last modification");

                    b.HasKey("Id");

                    b.ToTable("pracas", (string)null);
                });

            modelBuilder.Entity("Thunders.TechTest.Domain.Entities.RelatorioTiposVeiculosPraca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasComment("When this entity was created in this DB");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("created_by_user_id")
                        .HasComment("The id of the user who did create");

                    b.Property<DateTime>("DataRelatorio")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_relatorio");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at")
                        .HasComment("When this entity was deleted in this DB");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("deleted_by_user_id")
                        .HasComment("The id of the user who did the delete");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("The field that identifies that the entity was deleted");

                    b.Property<string>("NomePraca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nome_praca");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<string>("TipoVeiculo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("tipo_veiculo");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at")
                        .HasComment("When this entity was modified the last time");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("update_by_user_id")
                        .HasComment("The id of the user who did the last modification");

                    b.HasKey("Id");

                    b.ToTable("relatorio_tipos_veiculos_praca", (string)null);
                });

            modelBuilder.Entity("Thunders.TechTest.Domain.Entities.RelatorioTopPracasMes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasComment("When this entity was created in this DB");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("created_by_user_id")
                        .HasComment("The id of the user who did create");

                    b.Property<DateTime>("DataRelatorio")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_relatorio");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at")
                        .HasComment("When this entity was deleted in this DB");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("deleted_by_user_id")
                        .HasComment("The id of the user who did the delete");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("The field that identifies that the entity was deleted");

                    b.Property<int>("Mes")
                        .HasColumnType("int")
                        .HasColumnName("mes");

                    b.Property<string>("NomePraca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nome_praca");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at")
                        .HasComment("When this entity was modified the last time");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("update_by_user_id")
                        .HasComment("The id of the user who did the last modification");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valor_total");

                    b.HasKey("Id");

                    b.ToTable("relatorio_top_pracas_mes", (string)null);
                });

            modelBuilder.Entity("Thunders.TechTest.Domain.Entities.RelatorioValorHoraCidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("cidade");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasComment("When this entity was created in this DB");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("created_by_user_id")
                        .HasComment("The id of the user who did create");

                    b.Property<DateTime>("DataRelatorio")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_relatorio");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at")
                        .HasComment("When this entity was deleted in this DB");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("deleted_by_user_id")
                        .HasComment("The id of the user who did the delete");

                    b.Property<int>("Hora")
                        .HasColumnType("int")
                        .HasColumnName("hora");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("The field that identifies that the entity was deleted");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at")
                        .HasComment("When this entity was modified the last time");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("update_by_user_id")
                        .HasComment("The id of the user who did the last modification");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valor_total");

                    b.HasKey("Id");

                    b.ToTable("relatorio_valor_hora_cidade", (string)null);
                });

            modelBuilder.Entity("Thunders.TechTest.Domain.Entities.UtilizacaoPedagio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasComment("When this entity was created in this DB");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("created_by_user_id")
                        .HasComment("The id of the user who did create");

                    b.Property<DateTime>("DataHoraUtilizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_hora_utilizacao");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at")
                        .HasComment("When this entity was deleted in this DB");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("deleted_by_user_id")
                        .HasComment("The id of the user who did the delete");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("The field that identifies that the entity was deleted");

                    b.Property<Guid>("PracaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("praca_id");

                    b.Property<string>("TipoVeiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipo_veiculo");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at")
                        .HasComment("When this entity was modified the last time");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("update_by_user_id")
                        .HasComment("The id of the user who did the last modification");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valor_pago");

                    b.HasKey("Id");

                    b.HasIndex("PracaId");

                    b.ToTable("utilizacoes", (string)null);
                });

            modelBuilder.Entity("Thunders.TechTest.Domain.Entities.UtilizacaoPedagio", b =>
                {
                    b.HasOne("Thunders.TechTest.Domain.Entities.Praca", "Praca")
                        .WithMany()
                        .HasForeignKey("PracaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Praca");
                });
#pragma warning restore 612, 618
        }
    }
}
